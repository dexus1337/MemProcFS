# brew install pkg-config macfuse openssl
CC=clang
CFLAGS += -I. -I../includes -D MACOS -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -pthread
CFLAGS += -I/usr/local/include/fuse -D_FILE_OFFSET_BITS=64
#CFLAGS += `pkg-config fuse --cflags`
CFLAGS += -fPIC -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2 -O1
CFLAGS += -Wall -Wno-enum-compare -Wno-pointer-sign -Wno-multichar -Wno-unused-variable -Wno-unused-value
CFLAGS += -Wno-pointer-to-int-cast -Wno-int-to-pointer-cast
CFLAGS += -mmacosx-version-min=11.0
# DEBUG FLAGS BELOW
#CFLAGS += -O0
#CFLAGS += -fsanitize=address
# DEBUG FLAGS ABOVE
LDFLAGS += -ldl -L. ./leechcore.dylib ./vmm.dylib
#LDFLAGS += `pkg-config fuse --libs`
LDFLAGS += -L/usr/local/lib -lfuse -pthread
LDFLAGS += -Wl,-rpath,@loader_path
LDFLAGS += -mmacosx-version-min=11.0
DEPS = vfs.h
OBJ  = oscompatibility.o charutil.o vfslist.o memprocfs_fuse.o ob/ob_cachemap.o ob/ob_core.o ob/ob_map.o ob/ob_set.o

%.o: %.c $(DEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

memprocfs: $(OBJ)
	cp ../files/vmm.dylib . || cp ../../MemProcFS*/files/vmm.dylib . || true
	cp ../files/leechcore.dylib . || cp ../../LeechCore*/files/leechcore.dylib . || true
	$(CC) -o $@ $^ $(CFLAGS) $(LDFLAGS)
	mv memprocfs ../files/ |true
	mv vmm.dylib ../files/ |true
	mv leechcore.dylib ../files/ |true
	rm -f *.o || true
	rm -f */*.o || true
	rm -f *.dylib || true
	true

clean:
	rm -f *.o || true
	rm -f */*.o || true
	rm -f *.dylib || true
